{"name":"How we can use Propel ORM in Core php","tagline":"Core php Propel","body":"\r\n1.\tDownload  propel   in zip file\r\n2.\tunzip   in projecy/vendor folder \r\n3.\tcretae a  build.propertiese file  with \r\n\r\n      propel.home =  .\r\n     propel.project = <prokject name >\r\n     propel.database = <mysql>\r\n     propel.database.url = mysql:host=127.0.0.1;dbname=<databasename>\r\n     propel.databse.user = root\r\n    propel.database.password= <password>\r\n\r\n  #for  runtime  configuration \r\n    propel.runtime.conf.file= runtime-conf.xml\r\n     propel.runtime.phpconf.file = <propel-conf.php>\r\n\r\n\r\n\r\n\r\n  install  pear\r\n   \r\n      1. install pear \r\n2.\tpear channel-discover   pear.phing.info\r\n3.\tpear install phing/phing\r\n4.\tpear install log\r\n\r\n\r\n for global installation   use  following command \r\n\r\n pear channel-discover pear.propelorm.org\r\n pear  install -a propel/propel-genetrator\r\n pear install -a propel/propel-runtime\r\n\r\n  then create a database  and  run comand   to genarate   a schema.xml\r\n  file  from existing database.\r\n\r\n#if you have install  global configaration then  you can use propel-gen command   from any where \r\nif not then  use \r\n\r\n-> project directry >   </path /to/genarater/>  propel-gen . Reverse\r\n\r\n# above  comand cretae  a schema.xml file on root directry  \r\n\r\nThen  run\r\n\r\n  project directry > /path/to/genaraaterfile/  propel-gen om\r\n\r\n  # above command certae a  build folder    and  all  model  classs  within it \r\n\r\n #then run \r\n  propel-gen   sql   //  foe ccreta  a sqlfile generator    for schema.xml file\r\n\r\n  #create  a   runtime  config xml file  \r\n\r\n  create a     runtime-conf.xml file  in buld/conf/<propel-conf.xml> file  \r\n\r\n root lavel   \r\n\r\n   runtime-conf.xml   file  content \r\n\r\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<config>\r\n\r\n  <!-- Uncomment this if you have PEAR Log installed\r\n\r\n  <log>\r\n\r\n    <type>file</type>\r\n\r\n    <name>/path/to/propel.log</name>\r\n\r\n    <ident>propel-bookstore</ident>\r\n\r\n    <level>7</level>\r\n\r\n  </log>\r\n\r\n  -->\r\n\r\n  <propel>\r\n\r\n    <datasources default=\"bookstore\">\r\n\r\n      <datasource id=\"bookstore\">\r\n\r\n        <adapter>mysql</adapter> <!-- sqlite, mysql, mssql, oracle, or pgsql -->\r\n\r\n        <connection>\r\n\r\n          <dsn>mysql:host=localhost;dbname=my_db_name</dsn>\r\n\r\n          <user>my_db_user</user>\r\n\r\n          <password>my_db_password</password>\r\n\r\n        </connection>\r\n\r\n      </datasource>\r\n\r\n    </datasources>\r\n\r\n  </propel>\r\n\r\n</config>\r\n\r\n\r\n\r\nNotice how the id attribute of the <datasource> tag matches the connection name defined in the <database> tag of theschema.xml. This is how Propel maps a database description to a connection.\r\nReplace the <adapter> and the <connection> settings with the ones of your database.\r\n\r\n\r\n\r\n Then run a   comand   \r\n\r\n  >Propel-gen   convert-conf \r\n\r\n\r\n\r\n\r\nabove  command      create  a    runtime  config file   on  build /conf/propel-conf.xml  file  \r\n\r\n #  propel-conf.xml     <file name base on  build.propertire   file  configration file  name >\r\n\r\n   \r\nNow  use  all  model  in your    application  \r\n\r\n  \r\n create  a setting page   just like this \r\n\r\n  setting.php file content\r\n\r\n   require-one  'path/to/propel/runtime/lib/propel.php';\r\n   propel::init('path/to/prople/buid/conf/propel-conf.xml' );\r\n  set_include_path(“path/to/bostartao/build/class”.PATH_SAPERATER.get_include_path());\r\n\r\n\r\n\r\ninclude  above  file  in your    php page and then   \r\n\r\n\r\n   use   propel  object model  to generate   query  see propel  doc  page.\r\n\r\n\r\n\r\n\r\nNote  -  \r\n\r\n if you are going to make a change in schema file and add more table and relation and want to migrate  table and create model   the you need to do follow following step\r\n\r\n\r\n\r\n1. first make change in  schema.xml file \r\n  \r\n2 Then create a buildtime-conf.xml file same directry as runtime-conf.xml and content have also same such as (runtime-conf.xml)\r\n\r\n\r\n     3.  then run >  propel-gen diff\r\n\r\n == this will create  migration class in build/migration/ folder    like class migartion_XXXX\r\n\r\n4.\tThen run > propel-gen migrate\r\n\r\nThis will  modify  database with new column or table.\r\n\r\n\r\nNow again  excute  command  for create  model  class  new and modify\r\n \r\n5.\t> prople-gen om\r\n\r\nthis will create  all update model class in bulid folder\r\n\r\n Excute last  command  fot make run time configuration  in  build/conf  folder\r\n\r\n6> propel-gen  convert-conf \r\n\r\n  above  command update  “run time class map” file in   build/conf  folder\r\n\r\n\r\n\r\n\r\n\r\nNote   :: \r\n       in   shcema file  foreignkey refrence only define in foreign  table  not in  primary key table\r\n\r\n   User  ->  one to many  Post\r\n   Post  -> many to one User\r\n\r\n  then we need   only  define   foreign-key  in Post  table   not need  to  define this  in  user table\r\n\r\n  User table have automatic  bound relation to  post  with has many . \r\n\r\n   If you also define  foreign key in user table  then this relation will become  one to one on both side\r\n\r\n\r\n\r\n  for  example \r\n\r\n        <table  name =”user” >\r\n        <column  ..>\r\n      </table>\r\n\r\n      <table  name= “post” >\r\n         <column  ..>\r\n       <foreign-key foreignTable = \"user\" name = \"user_post\" phpName = \"Writer\"> \r\n         <reference local=\"user_id\" foreign=\"id\" /> \r\n        </foreign-key>\r\n      </table>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}